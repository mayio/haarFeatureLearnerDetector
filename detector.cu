/*
 *
 *  Created on: May 17, 2017
 *      Author: Mario LÃ¼der
 *
 */

#include <stdio.h>
#include <stdlib.h>


#include "Learner.cuh"
#include "Classifier.cuh"
#include "FeatureTypes.cuh"
#include "FeatureValues.cuh"
#include "Image.cuh"

// load image includes
#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>

#include <cuda_profiler_api.h>

#include "utilities.cuh"
#include "defines.cuh"


void detectInImageAndDisplay(const std::string & strongClassifierStr)
{
   /* faces
   std::string strongClassifierStr = std::string() +
         "[[[[[[[49,22,1]],[[49,22,-1]]],18,0,0.0332471,-90686,1],[[[[12,36,1],[12,36,-1]]],0,12,0.0991827,-9593,1],[[[[16,6,1],[16,6,-1]]],57,84,0.148353,2177,-1]]," +
         "[0.0343905,0.110103,0.174196]," +
         "1.74758]," +
         "[[[[[[8,12,1]],[[8,12,-1]]],84,64,0.0523191,-7807,1],[[[[14,16,1]],[[14,16,-1]]],33,12,0.0340082,-27205,1],[[[[22,36,1],[22,36,-1]]],45,12,0.114434,21409,-1],[[[[14,22,1]],[[14,22,-1]]],12,0,0.189615,-7194,1],[[[[26,4,1]],[[26,4,-1]]],30,100,0.165921,1563,-1],[[[[6,12,1]],[[6,12,-1]]],81,88,0.183366,66521,1]]," +
         "[0.0552076,0.0352054,0.129221,0.233982,0.198927,0.224539]," +
         "5.84288]," +
         "[[[[[[12,26,1],[12,26,-1],[12,26,1]]],36,76,0.0178653,22526,-1],[[[[2,10,1],[2,10,-1]]],3,20,0.0707651,-591,1],[[[[12,26,1],[12,26,-1]]],0,72,0.173719,-2579,1],[[[[49,16,1]],[[49,16,-1]]],27,0,0.175738,-24893,1],[[[[10,4,1]],[[10,4,-1]]],72,80,0.21342,181,-1],[[[[29,49,1],[29,49,-1]]],30,56,0.221047,23861,-1],[[[[6,8,1]],[[6,8,-1]],[[6,8,1]]],0,8,0.209865,4279,1],[[[[6,6,1],[6,6,-1]]],12,84,0.220425,-470,1],[[[[6,6,1]],[[6,6,-1]]],6,84,0.210801,-16,-1],[[[[49,6,1]],[[49,6,-1]]],15,96,0.222737,5228,-1],[[[[8,26,1],[8,26,-1]]],60,8,0.230551,914,-1]]," +
         "[0.0181903,0.0761542,0.210242,0.213206,0.271327,0.283774,0.265606,0.282749,0.267108,0.286566,0.299632]," +
         "10.5988]" +
         "]";
   */


   // test face
   //const std::string imageFileName = "/mnt/project-disk/src/ObjectRecognition/data/facesTraining/tutorial-haartraining/data/CMU-MIT_Face_Test_Set/newtest/ew-courtney-david.png";

   // test car
   // On Jetson
   // const std::string imageFileName = "/mnt/project-disk/src/ObjectRecognition/data/cars/TheKITTIVision/testing/image_2/000006.png";
   // const std::string imageFileName = "/mnt/project-disk/src/ObjectRecognition/data/cars/TheKITTIVision/testing/image_2/000021.png";

   // test car on host
   const std::string imageFileName = "/media/mona/ObjectRecognitio/data/objectRecognition/cars/TheKITTIVision/data/testing/image_2/000021.png";


   deviceSetup();

   cudaEvent_t start, stop;
   cudaEventCreate(&start);
   cudaEventCreate(&stop);

   Image image;
   Image::fromFile(imageFileName, image);

   std::vector<Classifier::Stage> strongClassifier;
   FeatureTypes featureTypes;
   Classifier::fromResult(strongClassifierStr, strongClassifier, featureTypes);

   std::vector<Classifier::ClassificationResult> results;

   // define all scales for a strong classifier
   std::vector<double> classifierScales;

   //classifierScales.push_back(0.5);
   //classifierScales.push_back(0.75);
   classifierScales.push_back(1.0);
   classifierScales.push_back(1.1);
   classifierScales.push_back(1.2);
   classifierScales.push_back(1.4);
   classifierScales.push_back(1.6);

   // use the defined scales to detect objects
   for (std::vector<double>::const_iterator classifierScalesIter = classifierScales.begin();
         classifierScalesIter != classifierScales.end();
         ++classifierScalesIter)
   {
      std::vector<Classifier::Stage> scaledStrongClassifier;
      FeatureTypes scaledFeatureTypes;
      Classifier::scaleStrongClassifier(*classifierScalesIter, strongClassifier, featureTypes, scaledStrongClassifier, scaledFeatureTypes);
      scaledFeatureTypes.generateClassifier(1.0, image.getWidth(), image.getHeight(), true);
      Classifier::detectStrongClassifier(scaledStrongClassifier, scaledFeatureTypes, image.getGpuIntegralImage(), results);

   }

   image.displayClassificationResult(results);
}

void detectInImageSetAndStore(const std::string & strongClassifierStr)
{
   const cv::String pathTestImages =
         "/media/mona/ObjectRecognitio/data/objectRecognition/cars/TheKITTIVision/data/testing/image_2/*.png";

   const std::string classificationResultFolder =
         "/media/mona/ObjectRecognitio/data/objectRecognition/cars/TheKITTIVision/data/classificationResultsTest";

   uint32_t resultImageWidth = 64;
   uint32_t resultImageHeight = 64;

   std::vector<Classifier::Stage> strongClassifier;
   FeatureTypes featureTypes;
   Classifier::fromResult(strongClassifierStr, strongClassifier, featureTypes);


   // define all scales for a strong classifier
   std::vector<double> classifierScales;

   classifierScales.push_back(0.5);
   classifierScales.push_back(0.75);
   classifierScales.push_back(1.0);
   classifierScales.push_back(1.1);
   classifierScales.push_back(1.2);
   classifierScales.push_back(1.4);
   classifierScales.push_back(1.6);
   classifierScales.push_back(2.0);
   classifierScales.push_back(2.5);
   classifierScales.push_back(3.0);

   // get all file names from test images
   std::vector<cv::String> fileNamesTestImages;
   cv::glob(pathTestImages, fileNamesTestImages, true);

   // classify all all sub images in each test image

   for (uint32_t testImageIdx = 0; testImageIdx < fileNamesTestImages.size(); testImageIdx++)
   {
      const cv::String & testImageFileName = fileNamesTestImages[testImageIdx];
      const std::string testImageBaseName = fileBasename(testImageFileName);

      std::stringstream debugMsg;
      debugMsg << "detectInImageSetAndStore: Image:" << testImageBaseName << " ";
      dumpFreeMemory(debugMsg.str());

      Image testImage;
      Image::fromFile(testImageFileName, testImage);

      // detect strong classifier in each scale in the whole image
      for (std::vector<double>::const_iterator classifierScalesIter = classifierScales.begin();
            classifierScalesIter != classifierScales.end();
            ++classifierScalesIter)
      {
         FeatureTypes scaledFeatureTypes;
         std::vector<Classifier::ClassificationResult> results;
         std::vector<Classifier::Stage> scaledStrongClassifier;
         Classifier::scaleStrongClassifier(*classifierScalesIter, strongClassifier, featureTypes, scaledStrongClassifier, scaledFeatureTypes);
         scaledFeatureTypes.generateClassifier(1.0, testImage.getWidth(), testImage.getHeight(), true);
         Classifier::detectStrongClassifier(scaledStrongClassifier, scaledFeatureTypes, testImage.getGpuIntegralImage(), results);

         //
         //testImage.displayClassificationResult(results);

         testImage.storeClassificationResult(
               testImageBaseName,
               results,
               classificationResultFolder,
               resultImageWidth, resultImageHeight);

      }

      dumpFreeMemory("detectInImageSetAndStore: Image processing done.");
      testImage.release();
      dumpFreeMemory("detectInImageSetAndStore: Release Memory.");
   }
}

/**
 * Host function that prepares data array and passes it to the CUDA kernel.
 */
int main(void)
{

   // car
   const std::string strongClassifierStr = std::string() +
         "[[[[[[[7,12,1],[7,12,-1]]],50,43,0.0701409,-2274,1],[[[[46,9,1]],[[46,9,-1]]],9,46,0.132362,-10296,1],[[[[7,19,1],[7,19,-1]]],0,45,0.186447,1051,-1]]," +
         "[0.0754318,0.152554,0.229176]," +
         "1.47327]," +
         "[[[[[[46,9,1]],[[46,9,-1]]],3,8,0.199475,2543,-1],[[[[46,7,1]],[[46,7,-1]]],7,49,0.136006,-14088,1],[[[[6,9,1],[6,9,-1]]],51,44,0.180362,-868,1],[[[[6,12,1],[6,12,-1]]],1,41,0.226693,1312,-1],[[[[12,14,1]],[[12,14,-1]]],25,30,0.261633,4470,-1],[[[[23,3,1]],[[23,3,-1]]],26,49,0.279373,-994,1]]," +
         "[0.24918,0.157415,0.220051,0.293147,0.354341,0.387681]," +
         "2.33715]," +
         "[[[[[[4,6,1],[4,6,-1]]],17,55,0.280041,-99,-1],[[[[46,7,1]],[[46,7,-1]]],8,50,0.134955,-20581,1],[[[[6,15,1],[6,15,-1]]],52,39,0.229135,-2261,1],[[[[7,12,1],[7,12,-1]]],0,43,0.254928,1992,-1],[[[[37,3,1]],[[37,3,-1]]],14,9,0.293662,-810,1],[[[[23,9,1]],[[23,9,-1]]],35,46,0.304059,-2726,1],[[[[7,9,1]],[[7,9,-1]]],4,36,0.303132,799,-1],[[[[9,23,1],[9,23,-1]]],18,17,0.318865,-305,1],[[[[7,4,1],[7,4,-1]]],50,26,0.31946,436,-1],[[[[4,12,1],[4,12,-1]]],22,49,0.299213,-127,-1],[[[[46,4,1]],[[46,4,-1]]],7,48,0.297731,-4333,1],[[[[4,46,1],[4,46,-1]]],33,11,0.319617,-139,-1]]," +
         "[0.388968,0.156009,0.297245,0.342152,0.415753,0.436903,0.434993,0.468138,0.469422,0.426968,0.423956,0.46976]," +
         "4.1875]," +
         "[[[[[[6,12,1],[6,12,-1]]],6,13,0.290159,1264,-1],[[[[37,6,1]],[[37,6,-1]]],7,52,0.249536,-8114,1],[[[[6,23,1],[6,23,-1]]],51,39,0.271175,-2090,1],[[[[37,4,1]],[[37,4,-1]]],12,49,0.290449,-4426,1],[[[[7,19,1],[7,19,-1]]],0,43,0.281104,997,-1],[[[[46,4,1]],[[46,4,-1]]],15,22,0.30012,-2174,1],[[[[6,23,1]],[[6,23,-1]]],26,11,0.32431,714,-1],[[[[29,4,1]],[[29,4,-1]]],19,11,0.336171,2108,-1],[[[[6,9,1],[6,9,-1]]],38,53,0.326009,152,1],[[[[37,4,1]],[[37,4,-1]]],15,10,0.336129,-1091,1],[[[[4,9,1]],[[4,9,-1]]],12,46,0.344926,-627,1],[[[[12,7,1]],[[12,7,-1]]],42,0,0.343209,-494,1]]," +
         "[0.408766,0.332509,0.372071,0.409342,0.391022,0.428817,0.479968,0.506412,0.4837,0.506317,0.526545,0.522555]," +
         "3.34229]," +
         "[[[[[[9,23,1],[9,23,-1]]],0,31,0.355774,6817,-1],[[[[46,7,1]],[[46,7,-1]]],9,41,0.249277,14373,-1],[[[[7,15,1],[7,15,-1]]],50,42,0.295324,-3464,1],[[[[29,9,1]],[[29,9,-1]]],5,46,0.310824,-8783,1],[[[[4,9,1]],[[4,9,-1]]],20,6,0.327199,410,-1],[[[[37,11,1]],[[37,11,-1]]],23,30,0.336626,9476,-1],[[[[6,4,1],[6,4,-1]]],1,42,0.349891,660,-1],[[[[6,15,1],[6,15,-1]]],25,42,0.345736,-339,-1],[[[[29,3,1]],[[29,3,-1]]],14,9,0.327571,-1209,1],[[[[4,23,1],[4,23,-1]]],28,40,0.338198,243,1],[[[[23,4,1]],[[23,4,-1]]],20,48,0.337184,2127,-1],[[[[2,15,1],[2,15,-1]]],0,47,0.335505,-22,-1],[[[[9,9,1],[9,9,-1]]],38,20,0.357082,-624,1],[[[[46,3,1]],[[46,3,-1]],[[46,3,1]]],4,44,0.364905,3273,1],[[[[7,29,1],[7,29,-1]]],19,35,0.356954,517,1]]," +
         "[0.552251,0.332049,0.419092,0.451008,0.486324,0.507445,0.538203,0.528436,0.487145,0.511026,0.508715,0.504903,0.555409,0.574568,0.555099]," +
         "3.89503]," +
         "[[[[[[4,6,1],[4,6,-1]]],5,34,0.356576,-150,1],[[[[6,29,1],[6,29,-1]]],0,26,0.274947,6885,-1],[[[[6,6,1]],[[6,6,-1]]],29,22,0.312565,-218,1],[[[[6,12,1],[6,12,-1]]],52,43,0.326379,-548,1],[[[[4,7,1]],[[4,7,-1]]],52,50,0.336984,-1272,1],[[[[9,9,1],[9,9,-1]]],7,15,0.3643,743,-1],[[[[15,3,1]],[[15,3,-1]]],32,49,0.372614,-842,1],[[[[9,19,1],[9,19,-1]]],0,45,0.351991,932,-1],[[[[3,5,1],[3,5,-1]]],46,17,0.362246,-178,1],[[[[4,15,1],[4,15,-1]]],29,49,0.36276,-195,-1],[[[[3,4,1],[3,4,-1]]],46,16,0.354991,79,-1],[[[[9,4,1]],[[9,4,-1]]],6,40,0.375243,78,-1],[[[[12,4,1]],[[12,4,-1]]],31,11,0.37485,690,-1],[[[[6,15,1],[6,15,-1]]],29,48,0.361717,301,1],[[[[23,2,1]],[[23,2,-1]]],23,12,0.361813,-241,1],[[[[4,46,1],[4,46,-1]]],34,10,0.363596,-244,-1],[[[[37,3,1]],[[37,3,-1]]],17,47,0.367848,-2438,1],[[[[6,4,1],[6,4,-1]]],52,60,0.35978,-169,-1],[[[[29,4,1]],[[29,4,-1]]],11,47,0.365487,1822,-1],[[[[9,12,1],[9,12,-1]]],46,44,0.356871,-991,1]]," +
         "[0.554185,0.37921,0.454682,0.484515,0.50826,0.573069,0.593915,0.543188,0.568003,0.569268,0.550367,0.600623,0.599616,0.566702,0.566938,0.57133,0.581899,0.561963,0.576013,0.554898]," +
         "4.68111]," +
         "[[[[[[4,4,1]],[[4,4,-1]]],13,26,0.371022,83,-1],[[[[37,3,1]],[[37,3,-1]]],10,8,0.270716,2318,-1],[[[[5,7,1]],[[5,7,-1]]],8,50,0.314313,-1041,1],[[[[46,9,1]],[[46,9,-1]]],4,9,0.347886,4064,-1],[[[[4,12,1],[4,12,-1]]],53,40,0.345446,-1493,1],[[[[4,6,1]],[[4,6,-1]]],50,38,0.369805,72,-1],[[[[29,4,1]],[[29,4,-1]]],18,44,0.374107,2378,-1],[[[[6,15,1],[6,15,-1]]],0,38,0.354411,883,-1],[[[[6,4,1]],[[6,4,-1]]],52,22,0.382997,-112,1],[[[[2,19,1],[2,19,-1]]],34,44,0.381124,-39,-1],[[[[19,3,1]],[[19,3,-1]]],25,10,0.358087,1406,-1],[[[[2,15,1],[2,15,-1]]],34,42,0.36076,34,1],[[[[37,3,1]],[[37,3,-1]]],15,9,0.365843,-1021,1],[[[[3,5,1],[3,5,-1]]],29,40,0.384383,28,1],[[[[46,3,1]],[[46,3,-1]]],2,47,0.360873,-2412,1],[[[[18,12,1],[18,12,-1]]],15,35,0.364334,-2172,-1],[[[[19,3,1]],[[19,3,-1]]],27,47,0.377274,1001,-1],[[[[2,23,1],[2,23,-1]]],60,41,0.366422,65,1],[[[[9,7,1],[9,7,-1]]],46,25,0.379804,1552,-1],[[[[6,29,1],[6,29,-1]]],21,16,0.372519,-233,1],[[[[4,12,1],[4,12,-1]]],50,22,0.377411,-351,1],[[[[19,18,1]],[[19,18,-1]]],9,18,0.376468,4891,-1],[[[[3,19,1],[3,19,-1]]],51,30,0.38254,186,-1],[[[[3,23,1],[3,23,-1]]],24,39,0.374894,-170,-1],[[[[29,4,1]],[[29,4,-1]]],16,48,0.372634,3053,-1]]," +
         "[0.58988,0.371208,0.458391,0.533475,0.527757,0.586811,0.597718,0.548973,0.620738,0.615832,0.557844,0.564359,0.576897,0.624387,0.564635,0.573154,0.605844,0.578338,0.612393,0.593673,0.606195,0.603766,0.619539,0.599728,0.593965]," +
         "5.53189]," +
         "[[[[[[6,12,1],[6,12,-1]]],51,43,0.303676,-828,1],[[[[4,6,1],[4,6,-1]]],9,13,0.212738,811,-1],[[[[9,7,1]],[[9,7,-1]]],48,49,0.320364,-1398,1],[[[[6,23,1],[6,23,-1]]],1,41,0.345923,2066,-1],[[[[46,9,1]],[[46,9,-1]]],9,40,0.323731,29597,-1],[[[[5,9,1]],[[5,9,-1]]],19,46,0.353335,-718,1],[[[[19,4,1]],[[19,4,-1]]],30,11,0.378232,1168,-1],[[[[7,29,1],[7,29,-1]]],18,17,0.378129,-534,1],[[[[9,6,1]],[[9,6,-1]]],45,25,0.389501,344,-1],[[[[9,5,1],[9,5,-1]]],9,54,0.38561,-199,-1],[[[[9,15,1],[9,15,-1]]],0,24,0.36886,-2824,1],[[[[6,9,1],[6,9,-1]]],3,25,0.379319,871,-1],[[[[3,6,1],[3,6,-1]]],28,35,0.35969,37,1],[[[[23,2,1]],[[23,2,-1]]],22,50,0.384004,-461,1],[[[[14,46,1],[14,46,-1]]],18,6,0.375055,-7306,-1],[[[[23,4,1]],[[23,4,-1]]],22,48,0.372285,2320,-1],[[[[2,9,1],[2,9,-1]]],32,36,0.372882,29,1],[[[[4,9,1]],[[4,9,-1]]],24,33,0.372315,781,-1],[[[[4,5,1],[4,5,-1]]],53,35,0.391341,-341,1],[[[[4,9,1],[4,9,-1]]],29,41,0.388782,-76,-1]]," +
         "[0.436112,0.270225,0.471375,0.528872,0.478701,0.546396,0.608318,0.60805,0.638003,0.627631,0.584435,0.611133,0.561742,0.623387,0.600141,0.593081,0.594596,0.593155,0.642956,0.636078]," +
         "4.54932]," +
         "[[[[[[3,12,1],[3,12,-1]]],0,52,0.248453,-86,-1],[[[[7,23,1],[7,23,-1]]],0,25,0.284123,10072,-1],[[[[4,19,1],[4,19,-1]]],48,38,0.353072,80,-1],[[[[5,4,1]],[[5,4,-1]]],26,18,0.364742,36,-1],[[[[6,9,1]],[[6,9,-1]]],7,35,0.377886,388,-1],[[[[2,7,1],[2,7,-1]]],10,17,0.376152,49,-1],[[[[2,19,1],[2,19,-1]]],1,43,0.381429,56,1],[[[[3,5,1],[3,5,-1]]],51,20,0.371177,130,-1],[[[[4,3,1]],[[4,3,-1]],[[4,3,1]]],0,3,0.381236,1194,1],[[[[23,3,1]],[[23,3,-1]]],20,29,0.375138,-852,1],[[[[11,12,1],[11,12,-1]]],41,46,0.376912,-633,1],[[[[29,4,1]],[[29,4,-1]]],18,12,0.381202,3565,-1],[[[[2,6,1],[2,6,-1]]],18,36,0.376393,18,1],[[[[37,3,1]],[[37,3,-1]]],12,7,0.381761,1932,-1],[[[[14,5,1],[14,5,-1]]],35,59,0.368236,-860,-1],[[[[19,3,1]],[[19,3,-1]]],26,50,0.38401,559,-1],[[[[6,19,1],[6,19,-1]]],1,41,0.375837,1196,-1],[[[[6,4,1],[6,4,-1]]],2,25,0.388231,-309,1],[[[[4,23,1],[4,23,-1]]],35,11,0.376856,-302,-1],[[[[7,4,1]],[[7,4,-1]]],45,26,0.392033,246,-1],[[[[4,9,1],[4,9,-1]]],6,21,0.400405,341,-1],[[[[3,9,1],[3,9,-1]]],37,51,0.389361,35,1],[[[[29,2,1]],[[29,2,-1]]],20,8,0.387144,-201,1],[[[[19,4,1]],[[19,4,-1]]],2,29,0.396927,127,-1],[[[[5,3,1]],[[5,3,-1]]],53,43,0.39856,16,-1],[[[[37,3,1]],[[37,3,-1]]],20,49,0.399754,-2423,1],[[[[4,6,1],[4,6,-1]]],23,38,0.386808,48,1],[[[[3,4,1],[3,4,-1]]],11,17,0.39011,-74,1],[[[[6,4,1],[6,4,-1]]],35,26,0.39426,90,1]]," +
         "[0.330588,0.396888,0.545768,0.574164,0.607423,0.602955,0.61663,0.590273,0.616124,0.600352,0.604909,0.616037,0.603573,0.617497,0.582868,0.623404,0.602147,0.634603,0.604765,0.644827,0.667793,0.637629,0.631705,0.658173,0.662675,0.665983,0.63081,0.639641,0.650873]," +
         "6.62214]," +
         "[[[[[[2,23,1],[2,23,-1]]],31,34,0.178811,-70,-1],[[[[6,12,1],[6,12,-1]]],52,44,0.329092,-2557,1],[[[[14,6,1],[14,6,-1]]],10,29,0.357472,-291,1],[[[[4,5,1],[4,5,-1],[4,5,1]]],43,48,0.366148,656,1],[[[[3,15,1],[3,15,-1]]],9,12,0.371754,431,-1],[[[[6,9,1]],[[6,9,-1]]],37,7,0.369538,156,-1],[[[[6,15,1],[6,15,-1]]],51,25,0.366079,669,-1],[[[[7,5,1],[7,5,-1]]],50,59,0.354601,-320,-1],[[[[29,7,1]],[[29,7,-1]]],21,36,0.366126,-1764,1],[[[[9,11,1]],[[9,11,-1]]],7,29,0.358213,725,-1],[[[[4,4,1],[4,4,-1]]],52,32,0.374019,-164,1],[[[[3,7,1],[3,7,-1]]],30,33,0.376858,39,1],[[[[6,6,1],[6,6,-1]]],5,23,0.377035,-410,1],[[[[7,5,1],[7,5,-1],[7,5,1]]],1,41,0.380099,2152,-1],[[[[2,6,1],[2,6,-1]]],14,19,0.396188,-14,1],[[[[11,12,1],[11,12,-1]]],24,9,0.38671,-1063,-1],[[[[19,3,1]],[[19,3,-1]]],27,36,0.377933,-355,1],[[[[2,19,1],[2,19,-1]]],60,42,0.379483,42,1],[[[[2,9,1],[2,9,-1]]],54,29,0.382477,47,-1],[[[[12,14,1]],[[12,14,-1]]],44,16,0.392299,976,-1],[[[[4,9,1]],[[4,9,-1]]],20,20,0.385962,-96,1],[[[[3,4,1],[3,4,-1]]],54,36,0.39783,-52,1],[[[[2,6,1],[2,6,-1]]],38,23,0.392163,-22,-1],[[[[6,4,1],[6,4,-1]]],50,37,0.381189,261,-1],[[[[9,4,1],[9,4,-1]]],45,58,0.382707,167,1],[[[[23,3,1]],[[23,3,-1]]],32,24,0.384207,366,-1],[[[[9,12,1],[9,12,-1]]],13,8,0.390897,-2498,-1],[[[[29,4,1]],[[29,4,-1]]],16,7,0.382309,2841,-1],[[[[11,12,1],[11,12,-1]]],8,52,0.383663,-652,-1],[[[[15,3,1]],[[15,3,-1]]],34,9,0.391278,-335,1],[[[[3,19,1],[3,19,-1]]],11,41,0.393145,53,1]]," +
         "[0.217747,0.490517,0.556352,0.577656,0.591734,0.586139,0.577484,0.549429,0.577601,0.55815,0.597492,0.604772,0.605226,0.613161,0.656145,0.63055,0.607543,0.61156,0.619373,0.645547,0.628565,0.660659,0.645177,0.616002,0.619975,0.623921,0.641758,0.618932,0.622489,0.642787,0.647839]," +
         "7.8999]," +
         "[[[[[[4,6,1],[4,6,-1]]],26,50,0.167847,113,1],[[[[6,23,1],[6,23,-1]]],52,41,0.245043,-830,1],[[[[7,4,1],[7,4,-1],[7,4,1]]],7,60,0.331926,1692,-1],[[[[15,6,1]],[[15,6,-1]]],0,45,0.32425,1719,-1],[[[[6,7,1],[6,7,-1]]],0,46,0.337098,698,-1],[[[[7,2,1]],[[7,2,-1]]],47,42,0.35005,8,-1],[[[[7,4,1],[7,4,-1]]],31,18,0.363624,141,-1],[[[[4,6,1]],[[4,6,-1]],[[4,6,1]]],60,1,0.364309,2412,1],[[[[29,9,1]],[[29,9,-1]]],15,4,0.360445,2759,-1],[[[[7,9,1]],[[7,9,-1]]],37,30,0.359717,550,-1],[[[[6,6,1],[6,6,-1]]],39,49,0.374068,-35,1],[[[[2,23,1],[2,23,-1]]],6,15,0.373199,64,-1],[[[[12,6,1]],[[12,6,-1]]],37,3,0.371978,-146,1],[[[[2,19,1],[2,19,-1]]],59,32,0.370423,-46,-1],[[[[7,29,1],[7,29,-1]]],0,1,0.36931,1293,1],[[[[7,3,1]],[[7,3,-1]]],14,7,0.373739,293,-1],[[[[3,4,1],[3,4,-1]]],34,44,0.356763,-27,-1],[[[[7,4,1]],[[7,4,-1]]],56,17,0.368103,53,-1],[[[[4,19,1],[4,19,-1]]],46,40,0.377188,103,-1],[[[[2,9,1],[2,9,-1]]],39,19,0.367882,-37,-1],[[[[2,7,1],[2,7,-1]]],48,17,0.360369,36,-1],[[[[6,11,1]],[[6,11,-1]]],42,24,0.367845,54,-1],[[[[3,4,1],[3,4,-1]]],47,19,0.351821,-59,1],[[[[2,23,1],[2,23,-1]]],31,35,0.368111,18,1],[[[[29,2,1]],[[29,2,-1]]],22,24,0.37119,47,-1]]," +
         "[0.201701,0.324578,0.49684,0.479836,0.508519,0.538579,0.571398,0.573091,0.563587,0.561809,0.597618,0.595402,0.5923,0.588368,0.585565,0.596778,0.554636,0.582536,0.60562,0.581983,0.563403,0.581891,0.542783,0.582556,0.590305]," +
         "7.91691]," +
         "[[[[[[9,7,1],[9,7,-1]]],14,56,0.133286,-544,-1],[[[[4,4,1],[4,4,-1],[4,4,1]]],33,60,0.120429,422,-1],[[[[9,14,1]],[[9,14,-1]]],1,32,0.27152,1598,-1],[[[[6,29,1],[6,29,-1]]],52,35,0.301172,-2729,1],[[[[3,15,1],[3,15,-1]]],14,31,0.29828,-3,1],[[[[2,23,1],[2,23,-1]]],41,39,0.311382,-42,-1],[[[[2,6,1],[2,6,-1]]],45,13,0.309978,-12,1],[[[[2,37,1],[2,37,-1]]],23,16,0.320026,-3,1],[[[[6,4,1]],[[6,4,-1]]],45,9,0.340472,-57,1],[[[[3,7,1],[3,7,-1]]],26,38,0.325738,28,1],[[[[4,3,1]],[[4,3,-1]]],28,14,0.332983,-7,1],[[[[11,15,1],[11,15,-1],[11,15,1]]],0,33,0.329498,25557,1],[[[[4,9,1],[4,9,-1]]],53,29,0.303565,199,-1],[[[[23,2,1]],[[23,2,-1]]],31,20,0.338542,9,-1],[[[[2,15,1],[2,15,-1]]],60,39,0.335979,59,1],[[[[12,2,1]],[[12,2,-1]]],15,12,0.321165,-29,1],[[[[4,23,1],[4,23,-1]]],34,15,0.341573,287,-1],[[[[14,29,1],[14,29,-1]]],16,19,0.337815,1453,1]]," +
         "[0.153784,0.136917,0.372722,0.430968,0.425071,0.452183,0.449228,0.470645,0.516237,0.483103,0.499212,0.49142,0.435885,0.511811,0.505976,0.473113,0.518772,0.510153]," +
         "8.45065]," +
         "[[[[[[7,11,1]],[[7,11,-1]],[[7,11,1]]],6,2,0.11447,12578,1],[[[[7,7,1]],[[7,7,-1]],[[7,7,1]]],8,42,0.0471297,547,-1],[[[[4,11,1]],[[4,11,-1]],[[4,11,1]]],50,27,0.217407,2874,1],[[[[2,4,1],[2,4,-1]]],38,35,0.20558,-18,-1],[[[[6,7,1],[6,7,-1]]],2,46,0.225717,1132,-1],[[[[3,5,1],[3,5,-1]]],20,37,0.24369,36,1],[[[[4,7,1]],[[4,7,-1]],[[4,7,1]]],52,11,0.209619,2302,-1]]," +
         "[0.129268,0.0494607,0.277804,0.258779,0.291517,0.322208,0.265213]," +
         "6.72357]," +
         "[[[[[[6,4,1],[6,4,-1],[6,4,1]]],8,9,0.0686329,3505,1],[[[[6,5,1],[6,5,-1],[6,5,1]]],28,2,0.0210667,219,-1],[[[[7,4,1],[7,4,-1],[7,4,1]]],43,28,0.0553122,3801,1],[[[[3,19,1],[3,19,-1]]],9,41,0.117708,156,1]]," +
         "[0.0736905,0.0215201,0.0585508,0.133411]," +
         "6.67663]," +
         "[[[[[[3,5,1],[3,5,-1]]],27,55,0.0130991,119,1],[[[[7,23,1]],[[7,23,-1]]],0,0,0.000452058,15759,1],[[[[4,15,1],[4,15,-1]]],12,27,0.00486183,-1358,-1]]," +
         "[0.013273,0.000452263,0.00488558]," +
         "12.0233]" +
         "]";

   detectInImageSetAndStore(strongClassifierStr);
	return 0;
}
