/*
 *
 *  Created on: May 17, 2017
 *      Author: Mario LÃ¼der
 *
 */

#include <stdio.h>
#include <stdlib.h>


#include "Learner.cuh"
#include "Classifier.cuh"
#include "FeatureTypes.cuh"
#include "FeatureValues.cuh"
#include "Image.cuh"

// load image includes
#include <opencv2/core/core.hpp>
#include <opencv2/core/gpumat.hpp>
#include <opencv2/gpu/gpu.hpp>
#include <opencv2/highgui/highgui.hpp>

#include <cuda_profiler_api.h>

#include "utilities.cuh"
#include "defines.cuh"

/**
 * Host function that prepares data array and passes it to the CUDA kernel.
 */
int main(void)
{
   // Original
   // std::string strongClassifierStr = "[[[[[[[49,22,1]],[[49,22,-1]]],18,0,0.0332471,-90686,1],[[[[12,36,1],[12,36,-1]]],0,12,0.0991827,-9593,1]],[0.0343905,0.110103],2.20634],[[[[[[16,66,1],[16,66,-1]]],57,20,0.108966,29552,-1],[[[[14,16,1]],[[14,16,-1]]],72,64,0.160855,3968,-1],[[[[26,4,1]],[[26,4,-1]]],33,100,0.183328,1901,-1],[[[[29,36,1],[29,36,-1]]],33,8,0.1819,25689,-1],[[[[4,6,1],[4,6,-1]]],84,0,0.169853,44211,1]],[0.122292,0.191689,0.224481,0.222345,0.204606],5.09883],[[[[[[26, 29, 1]], [[26, 29, -1]]], 18, 32, 0.0191388, 34104, 1],[[[[26, 3, 1]], [[26, 3, -1]], [[26, 3, 1]]], 21, 52, 0.0207317, 8115, -1]], [0.0195122, 0.0211706], 6.79186]]";

   //std::string strongClassifierStr = "[[[[[[[49,22,1]],[[49,22,-1]]],18,0,0.0332471,-90686,1],[[[[12,36,1],[12,36,-1]]],0,12,0.0991827,-9593,1]],[0.0343905,0.110103],2.20634],[[[[[[16,66,1],[16,66,-1]]],57,20,0.108966,29552,-1],[[[[14,16,1]],[[14,16,-1]]],72,64,0.160855,3968,-1],[[[[26,4,1]],[[26,4,-1]]],33,100,0.183328,1901,-1],[[[[29,36,1],[29,36,-1]]],33,8,0.1819,25689,-1],[[[[4,6,1],[4,6,-1]]],84,0,0.169853,44211,1]],[0.122292,0.191689,0.224481,0.222345,0.204606],5.09883],[[[[[[26, 29, 1]], [[26, 29, -1]]], 18, 32, 0.0191388, 34104, 1],[[[[26, 3, 1]], [[26, 3, -1]], [[26, 3, 1]]], 21, 52, 0.0207317, 8115, -1]], [0.0195122, 0.0211706], 7.78186]]";
   /*
   [[[[[[[49,22,1]],[[49,22,-1]]],18,0,0.0332471,-90686,1],[[[[22,8,1],[22,8,-1]]],48,104,0.0922494,-38536,1],[[[[8,26,1],[8,26,-1]]],0,20,0.144086,-6474,1],[[[[10,22,1]],[[10,22,-1]],[[10,22,1]]],0,32,0.160434,18853,1],[[[[26,4,1]],[[26,4,-1]]],30,100,0.154933,1657,-1]],
   [0.0343905,0.101624,0.168342,0.191091,0.183338],
   3.35143],
   [[[[[[49,22,1]],[[49,22,-1]]],6,0,0.176727,-40517,1],[[[[12,66,1],[12,66,-1]]],66,24,0.187417,21526,-1],[[[[14,16,1]],[[14,16,-1]]],75,64,0.194728,3836,-1],[[[[12,36,1],[12,36,-1]]],0,56,0.23373,-8190,1],[[[[22,66,1],[22,66,-1]]],39,0,0.228247,21777,-1],[[[[49,6,1]],[[49,6,-1]]],9,0,0.228516,-7595,1],[[[[49,6,1]],[[49,6,-1]]],18,52,0.236501,-3840,1],[[[[26,12,1]],[[26,12,-1]]],0,64,0.225154,2591,-1],[[[[49,3,1]],[[49,3,-1]]],21,48,0.265981,-921,1],[[[[6,3,1]],[[6,3,-1]]],39,104,0.264232,57,-1],[[[[14,3,1]],[[14,3,-1]]],6,104,0.265039,-136,1],[[[[10,22,1]],[[10,22,-1]],[[10,22,1]]],78,36,0.252234,16527,1],[[[[2,6,1],[2,6,-1]]],69,100,0.242955,396,-1]],
   [0.214664,0.230644,0.241816,0.305022,0.295752,0.296203,0.309759,0.290579,0.362362,0.359124,0.360616,0.337317,0.320925],
   7.37621],
   [[[[[[49,4,1]],[[49,4,-1]],[[49,4,1]]],42,0,0.0261283,29220,1],[[[[12,26,1],[12,26,-1],[12,26,1]]],39,32,0.0710643,28378,-1],[[[[2,26,1],[2,26,-1]]],72,12,0.11069,52,-1],[[[[29,36,1],[29,36,-1]]],24,48,0.104579,1347,-1],[[[[8,36,1],[8,36,-1]]],24,20,0.0969391,1184,1]],
   [0.0268293,0.0765008,0.124468,0.116793,0.107345],
   8.33607]
   ]
   */


   /* faces
   std::string strongClassifierStr = std::string() +
         "[[[[[[[49,22,1]],[[49,22,-1]]],18,0,0.0332471,-90686,1],[[[[12,36,1],[12,36,-1]]],0,12,0.0991827,-9593,1],[[[[16,6,1],[16,6,-1]]],57,84,0.148353,2177,-1]]," +
         "[0.0343905,0.110103,0.174196]," +
         "1.74758]," +
         "[[[[[[8,12,1]],[[8,12,-1]]],84,64,0.0523191,-7807,1],[[[[14,16,1]],[[14,16,-1]]],33,12,0.0340082,-27205,1],[[[[22,36,1],[22,36,-1]]],45,12,0.114434,21409,-1],[[[[14,22,1]],[[14,22,-1]]],12,0,0.189615,-7194,1],[[[[26,4,1]],[[26,4,-1]]],30,100,0.165921,1563,-1],[[[[6,12,1]],[[6,12,-1]]],81,88,0.183366,66521,1]]," +
         "[0.0552076,0.0352054,0.129221,0.233982,0.198927,0.224539]," +
         "5.84288]," +
         "[[[[[[12,26,1],[12,26,-1],[12,26,1]]],36,76,0.0178653,22526,-1],[[[[2,10,1],[2,10,-1]]],3,20,0.0707651,-591,1],[[[[12,26,1],[12,26,-1]]],0,72,0.173719,-2579,1],[[[[49,16,1]],[[49,16,-1]]],27,0,0.175738,-24893,1],[[[[10,4,1]],[[10,4,-1]]],72,80,0.21342,181,-1],[[[[29,49,1],[29,49,-1]]],30,56,0.221047,23861,-1],[[[[6,8,1]],[[6,8,-1]],[[6,8,1]]],0,8,0.209865,4279,1],[[[[6,6,1],[6,6,-1]]],12,84,0.220425,-470,1],[[[[6,6,1]],[[6,6,-1]]],6,84,0.210801,-16,-1],[[[[49,6,1]],[[49,6,-1]]],15,96,0.222737,5228,-1],[[[[8,26,1],[8,26,-1]]],60,8,0.230551,914,-1]]," +
         "[0.0181903,0.0761542,0.210242,0.213206,0.271327,0.283774,0.265606,0.282749,0.267108,0.286566,0.299632]," +
         "10.5988]" +
         "]";
   */

   const std::string strongClassifierStr = std::string() +
         "[[[[[[[37,11,1]],[[37,11,-1]]],12,42,0.0629247,-14694,1],[[[[4,12,1],[4,12,-1]]],48,38,0.148124,-608,1],[[[[9,15,1],[9,15,-1]]],2,42,0.198597,1182,-1]]," +
         "[0.0671501,0.17388,0.247811]," +
         "1.39509]," +
         "[[[[[[4,9,1],[4,9,-1]]],34,52,0.136997,-150,-1],[[[[5,9,1]],[[5,9,-1]]],46,42,0.113868,-2114,1],[[[[11,9,1],[11,9,-1]]],42,40,0.170516,-2902,1],[[[[9,7,1],[9,7,-1]]],2,42,0.230723,1894,-1],[[[[6,5,1],[6,5,-1]]],20,20,0.289878,-95,1],[[[[15,11,1]],[[15,11,-1]]],26,42,0.281223,-3101,1],[[[[7,15,1],[7,15,-1]]],44,24,0.289115,1573,-1],[[[[11,9,1],[11,9,-1]]],16,50,0.27894,-834,-1],[[[[29,6,1]],[[29,6,-1]]],14,16,0.300449,1690,-1],[[[[12,9,1]],[[12,9,-1]]],42,4,0.333612,-147,1],[[[[11,12,1],[11,12,-1]]],20,44,0.340856,731,1],[[[[37,7,1]],[[37,7,-1]]],0,38,0.316128,6668,-1],[[[[6,19,1],[6,19,-1]]],8,40,0.320368,399,-1],[[[[3,29,1],[3,29,-1]]],46,16,0.33381,-204,1],[[[[2,19,1],[2,19,-1]]],32,44,0.34298,-22,-1],[[[[15,2,1]],[[15,2,-1]],[[15,2,1]]],28,42,0.33106,266,1]]," +
         "[0.158745,0.1285,0.205568,0.299921,0.408209,0.391251,0.406698,0.386847,0.429488,0.500628,0.517118,0.462263,0.471385,0.501074,0.522023,0.494902]," +
         "7.32725]," +
         "[[[[[[9,4,1],[9,4,-1]]],40,58,0.314589,-260,-1],[[[[6,12,1],[6,12,-1]]],46,40,0.201472,-2269,1],[[[[12,9,1]],[[12,9,-1]]],12,42,0.228639,-3625,1],[[[[37,3,1]],[[37,3,-1]]],20,24,0.294685,-687,1],[[[[9,23,1],[9,23,-1]]],0,38,0.301649,1702,-1],[[[[23,3,1]],[[23,3,-1]]],22,16,0.340376,780,-1],[[[[4,12,1],[4,12,-1]]],34,48,0.311859,89,1],[[[[6,23,1],[6,23,-1]]],8,20,0.344286,2422,-1],[[[[7,23,1],[7,23,-1]]],22,20,0.352487,-115,1],[[[[7,12,1],[7,12,-1]]],6,20,0.353368,-935,1],[[[[4,7,1],[4,7,-1]]],26,40,0.319664,-80,-1],[[[[37,7,1]],[[37,7,-1]]],14,40,0.344147,-11256,1],[[[[3,4,1],[3,4,-1]]],34,34,0.345718,-18,-1],[[[[46,9,1]],[[46,9,-1]]],2,2,0.347353,-2165,1],[[[[46,6,1]],[[46,6,-1]]],2,38,0.353109,4928,-1],[[[[3,7,1],[3,7,-1]]],28,40,0.35603,65,1],[[[[29,3,1]],[[29,3,-1]],[[29,3,1]]],14,40,0.355514,1920,1],[[[[3,7,1],[3,7,-1],[3,7,1]]],2,22,0.364181,1141,-1],[[[[4,9,1],[4,9,-1]]],42,18,0.370424,-301,1],[[[[3,12,1],[3,12,-1]]],28,48,0.358365,-70,-1],[[[[4,4,1]],[[4,4,-1]]],48,24,0.366343,-91,1],[[[[6,9,1]],[[6,9,-1]]],44,42,0.371148,-552,1],[[[[37,4,1]],[[37,4,-1]]],12,44,0.364949,1974,-1],[[[[6,23,1]],[[6,23,-1]]],26,10,0.359462,-161,-1],[[[[37,6,1]],[[37,6,-1]]],12,40,0.381096,-7110,1],[[[[3,5,1],[3,5,-1]]],24,36,0.350525,25,1],[[[[3,23,1],[3,23,-1]]],46,28,0.375931,193,-1],[[[[7,15,1],[7,15,-1]]],44,40,0.360004,-614,1],[[[[3,5,1],[3,5,-1]]],24,36,0.389181,-10,-1],[[[[23,3,1]],[[23,3,-1]]],20,14,0.380778,-816,1],[[[[3,15,1],[3,15,-1]]],0,44,0.368926,-62,-1],[[[[19,3,1]],[[19,3,-1]]],26,14,0.373122,1249,-1],[[[[6,6,1],[6,6,-1]]],22,54,0.359414,182,1],[[[[19,11,1]],[[19,11,-1]],[[19,11,1]]],22,18,0.385503,6549,1],[[[[9,12,1],[9,12,-1]]],28,42,0.377729,-685,-1]]," +
         "[0.458978,0.252304,0.29641,0.417807,0.431946,0.516015,0.453191,0.525056,0.54437,0.546474,0.469863,0.524733,0.528393,0.532221,0.545856,0.552866,0.551624,0.572775,0.58837,0.558518,0.578142,0.590201,0.574678,0.561187,0.615758,0.539704,0.602387,0.56251,0.637147,0.614929,0.584601,0.595208,0.561071,0.627347,0.607017]," +
         "11.3522]," +
         "[[[[[[29,9,1]],[[29,9,-1]]],16,44,0.169313,-3181,1],[[[[11,12,1],[11,12,-1]]],0,40,0.126051,3335,-1],[[[[4,12,1],[4,12,-1]]],48,40,0.222196,-264,1],[[[[19,9,1]],[[19,9,-1]]],28,40,0.280582,-5832,1],[[[[9,6,1],[9,6,-1]]],18,20,0.298609,-263,1],[[[[4,7,1]],[[4,7,-1]]],20,14,0.320035,132,-1],[[[[6,6,1],[6,6,-1]]],26,48,0.325048,194,1],[[[[9,6,1],[9,6,-1]]],44,26,0.287613,1115,-1],[[[[9,19,1],[9,19,-1]]],46,40,0.33054,-576,1],[[[[37,9,1]],[[37,9,-1]]],4,46,0.337128,-9709,1],[[[[18,15,1],[18,15,-1]]],2,46,0.331973,-849,-1],[[[[23,6,1]],[[23,6,-1]]],20,8,0.313282,-1027,1],[[[[3,15,1],[3,15,-1]]],14,12,0.345398,115,-1],[[[[3,9,1],[3,9,-1]]],26,42,0.333349,-81,-1],[[[[4,7,1],[4,7,-1]]],42,18,0.324378,-421,1],[[[[2,46,1],[2,46,-1]]],34,18,0.331397,-58,-1],[[[[9,5,1],[9,5,-1]]],40,24,0.336005,873,-1],[[[[2,19,1],[2,19,-1]]],34,44,0.324561,32,1],[[[[37,6,1]],[[37,6,-1]]],12,40,0.339317,-7360,1],[[[[4,7,1]],[[4,7,-1]]],46,34,0.330971,7,-1],[[[[4,9,1],[4,9,-1]]],8,50,0.359434,27,-1],[[[[14,19,1],[14,19,-1]]],36,24,0.353189,-3253,1],[[[[15,9,1]],[[15,9,-1]]],22,2,0.351612,-914,1],[[[[4,12,1],[4,12,-1]]],38,46,0.360473,50,1],[[[[15,7,1]],[[15,7,-1]]],28,20,0.359869,-2520,1],[[[[23,5,1],[23,5,-1]]],14,8,0.329915,-1105,-1]]," +
         "[0.203822,0.144232,0.28567,0.390012,0.425738,0.470665,0.481586,0.403732,0.493741,0.508586,0.496945,0.456202,0.527645,0.500035,0.480117,0.495656,0.506036,0.480518,0.513585,0.494702,0.561118,0.546047,0.542286,0.563655,0.562179,0.492348]," +
         "11.3839]," +
         "[[[[[[6,2,1]],[[6,2,-1]]],44,18,0.0241323,-191,-1],[[[[18,4,1],[18,4,-1]]],20,50,0.064423,2465,1],[[[[6,6,1]],[[6,6,-1]]],16,46,0.10005,-725,1],[[[[2,6,1],[2,6,-1]]],50,48,0.188131,13,1],[[[[14,4,1],[14,4,-1]]],6,48,0.156098,1704,1]]," +
         "[0.024729,0.0688591,0.111173,0.231726,0.184971]," +
         "8.57214]" +
         "]";



   // test face
   //const std::string imageFileName = "/mnt/project-disk/src/ObjectRecognition/data/facesTraining/tutorial-haartraining/data/CMU-MIT_Face_Test_Set/newtest/ew-courtney-david.png";

   // test car
   const std::string imageFileName = "/mnt/project-disk/src/ObjectRecognition/data/cars/TheKITTIVision/testing/image_2/000006.png";

   deviceSetup();

   cudaEvent_t start, stop;
   cudaEventCreate(&start);
   cudaEventCreate(&stop);

   Image image;
   Image::fromFile(imageFileName, image);

   std::vector<Classifier::Stage> strongClassifier;
   FeatureTypes featureTypes;
   Classifier::fromResult(strongClassifierStr, strongClassifier, featureTypes);

   std::vector<Classifier::ClassificationResult> results;

   // define all scales for a strong classifier
   std::vector<double> classifierScales;

   // classifierScales.push_back(0.5);
   // classifierScales.push_back(0.75);
   classifierScales.push_back(1.0);
   // classifierScales.push_back(1.1);
   // classifierScales.push_back(1.2);
   // classifierScales.push_back(1.4);
   // classifierScales.push_back(1.6);

   // use the defined scales to detect objects
   for (std::vector<double>::const_iterator classifierScalesIter = classifierScales.begin();
         classifierScalesIter != classifierScales.end();
         ++classifierScalesIter)
   {
      std::vector<Classifier::Stage> scaledStrongClassifier;
      FeatureTypes scaledFeatureTypes;
      Classifier::scaleStrongClassifier(*classifierScalesIter, strongClassifier, featureTypes, scaledStrongClassifier, scaledFeatureTypes);
      scaledFeatureTypes.generateClassifier(1.0, image.getWidth(), image.getHeight(), true);
      Classifier::detectStrongClassifier(scaledStrongClassifier, scaledFeatureTypes, image.getGpuIntegralImage(), results);

   }

   image.displayClassificationResult(results);

	return 0;
}
